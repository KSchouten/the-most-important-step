[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "The most important step a man can take. Itâ€™s not the first one, is it? Itâ€™s the next one. Always the next step, Dalinar. â€” Oathbringer, Brandon Sanderson\n\nWelcome to my website! It records some of the next steps in my journey through life. Every person has their own journey and their own steps to take. Maybe some of what I write seems obvious to you because you are further down the road for that theme or topic, while other things may be helpful to you. There is a good chance that you disagree with me, which is totally fine. Variety in opinions, personal preferences, and taste is what makes humanity such a curious and endlessly fascinating bunch.\nMy interests are data science, data engineering, R and Python, reading books, sci-fi and fantasy stuff, personal development and leadership, and probably quite a few other things that I canâ€™t think of at the moment."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Starting A Quarto Blog",
    "section": "",
    "text": "Over the last few days I got the notion in my head that I wanted to (again) have a personal website and since my visit to posit::conf(2025), where I saw a lot of nifty Quarto stuff, Iâ€™d like to create the whole thing in Quarto.\nGiven the fact that you read this, I have been succesful. That is great, because it means at the end of this post you should have all the ingredients to get something like this running yourself.\n\nWhat do I want?\nI want to host the code on GitHub and publish on GitHub Pages. This means I get to have free hosting plus, with GitHub Actions I can automatically republish whenever I update my code. Furthermore, I would like to have the option for comments under each post so users can leave questions and benefit from other peopleâ€™s remarks.\n\n\nWhat do I need?\nI will need a GitHub account, which youâ€™ll probably have. If you donâ€™t know Git or GitHub, you will need to get acquainted with that before continuing further. A couple of resources to help you on your way would be:\n\nGit Handbook â€“ GitHub Guides\nTry Git â€“ Interactive Tutorial\nGit Basics â€“ Official Docs\n\nIf you want to link to a custom domain instead of the default github.io one, you need to buy a domain name. There are many vendors out there. Prices can vary a bit by Top Level Domain (i.e., .com, .net, .etc) but are mostly quite reasonable. Note that you pay this amount per year, so it will be a recurring cost. Iâ€™d advise to first get things up and ready before you start spending money on cool domain names.\nLast, you need an IDE to program in. I am using Positron for this project, but there are other options as well, such as VSCode, RStudio or even just a terminal and text editor.\n\n\nStarting the project\nI generally followed the instructions on this helpful webpage: https://quarto.org/docs/websites/website-blog.html up until the themes section.\nAdd a .gitignore file in the main folder and add at least this:\n_site\n.quarto\nThis will prevent the rendered output on your machine while previewing to be mixed with the source code on GitHub.\n\n\nLink with GitHub\nTo make get this on GitHub I created a git repository in the project folder by opening the terminal tab in Positron and typing these three commands.\ngit init\ngit add -A\ngit commit -m \"first commit\"\ngit branch -M main\nThis creates a new repository, adds all files to it and bundles them all in a first commit to the main branch. Be careful with git add -A as it may unintentionally add files you donâ€™t want to your repository. Because git is a versioning system, a file once put in the repo will always remain in the history. So take special care with passwords or other secret information!\nThen in GitHub I created a new repository over there as well. CHoose an appropriate name, keep it public and donâ€™t add any of the default files that it offers (no README, license or .gitignore, we can add those later), and there you go. Use these lines to connect your existing git repository on your device to the one you created on GitHub. Of course youâ€™ll have to replace the two placeholders with your own GitHub account name and repository name.\ngit remote add origin https://github.com/my_account_name/my_repository_name.git\ngit push -u origin main\n\n\nPublish with GitHub Actions\nNext up is setting up GitHub Actions so we can automatically publish whenever we push a commit with a new version to the main branch. GitHub Actions is a powerful tool to automate workflows around your repository. You can check https://github.com/features/actions for more information.\nTo get Actions working, you simply have to add a workflow to your repo. You can do so by creating a folder named .github to your main project folder and then create a workflows folder inside that new .github folder. Inside the workflows folder, create a file called render.yml which will contain the instructions for GitHub Actions to execute:\n\n\nrender.yml\n\nname: render.yaml\non:\n  push:\n    # This means this Action will trigger whenever you push a commit to the main branch\n    branches: main\npermissions:\n  contents: write\njobs:\n  render:\n    runs-on: ubuntu-latest\n    steps:\n      # Checkout this repo\n      - uses: actions/checkout@v4\n\n      # Install quarto\n      - uses: quarto-dev/quarto-actions/setup@v2\n\n      # Render the quarto website\n      - name: Render\n        run: quarto render .\n\n      # Publish the output of render in _site/ to GitHub pages\n      - name: Publish to GitHub pages ðŸš€\n        uses: JamesIves/github-pages-deploy-action@v4.5.0\n        with:\n          folder: _site\n\nThis will render your Quarto code into html and store that output in the gh-pages branch of your project. Note that if you want to include R or Python code on your page to compute certain graphs for instance, you need additional steps in the yaml to install R and/or Python and required packages and modules. Because this will substantially slow down the GitHub Action and I donâ€™t currently use it, I have decided to leave it out for the moment.\n\n\nSetup GitHub Pages\nNow that we have a gh-pages branch, we can setup GitHub Pages to use that branch to publish our website. Go to the Settings of your GitHub repository and then in the left menu go to Pages. Choose â€˜Deploy from a branchâ€™ and pick the â€˜gh-pagesâ€™ branch in the dropdown below that. You might also see the option for a custom domain. Donâ€™t worry, weâ€™ll revisit this page to set that up later!\n\n\nDoes it work?\nDonâ€™t forget to stage all your changes, commit them to your repository and push them to GitHub. If you go to Actions in the top menu of your repository on GitHub youâ€™ll see a workflow running. You might also see a second one, called pages-build-deployment which is a standard GitHub workflow to publish whatever is in your gh-pages branch to your repository website. This website can be found at https://my_account_name.github.io/my_repository_name.\nSo the setup has two steps:\n\nRender your Quarto files into html files and storing them in the gh-pages branch\nPublishing whatever is in the gh-pages branch to your repositoryâ€™s website\n\nThe first is our own GitHub Action, the second is a standard one that is enabled by enabling GitHub Pages in the settings.\nIf you go to the url of your webpage, you should see something already!\n\n\nComments\nBecause I would like to be able to have people ask questions or provide useful feedback for other readers to benefit from, I want to have a comment section below my blog posts.\nBecause Quarto is basically only a client-side application without any database behind it, this can be rather tricky. Fortunately, there are various plugins that can workaround this limitation. One of these is Giscus. This application for GitHub stores all comments as GitHub Discussions in a GitHub repository. If we choose our website repository, we have everything nice and tidy together.\nTo get started, install the Giscus app for GitHub here: https://github.com/apps/giscus. Be sure to install it for only the repository that contains your website. Next, enable the Discussions feature on your website repository by going to Settings and under General options, scroll down to the Features section. There you can enable Discussions. From what I understand, at the time of writing, the Discussions feature is still under active development so things might change. Enabling this feature should give you a Discussions menu item up top.\nIâ€™d advise you to go there and update the default welcome message.\nThen, you can enable the giscus extension in Quarto by adding the following lines to your _quarto.yml file in the main folder.\n\n\n_quarto.yml\n\ncomments:\n  giscus:\n    repo: your_account_name/your_repository_name\n\nThis will enable comments on every page. However, comments on the main and about page are probably not what you want, so for those two pages you can disable the comments by adding\ncomments: false\nto the frontline matter of index.qmd and about.qmd. Of course, if you have specific blog posts in the future where you donâ€™t want comments you can do the same there.\nBe sure to test the results! You can add a comment to one of the demo posts. In the GitHub repo, under Discussions, you can moderate the comments and remove entire discussion if you want. Note that users must have a GitHub account to add a comment. While you might miss out on a few comments of people without such an account, it probably also prevents quite a bit of spam here. Users can also directly add comments to existing discussion on GitHub directly, not just via the comment plugin on your website.\n\n\nResults!\nOk, weâ€™re done for today! What have we achieved?\nWe have a code-based blog website in the air, with free hosting and an actual publishing process that automatically runs whenever we push a new version of the website to GitHub. This is quite an achievement.\nWhatâ€™s left? Well, I would certainly like to add a custom domain name to this website. This would take a number of extra steps so it is a bit much for this article and deserves its own place. If you followed along, now is the time to start replacing all that demo text with content of your own. Take the next step and share some of your own ideas or thoughts with the world. Good luck!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Recording my next steps",
    "section": "",
    "text": "Starting A Quarto Blog\n\n\n\nnews\n\ncode\n\nquarto\n\n\n\n\n\n\n\nKim Schouten\n\n\nSep 25, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Next First Step: This Blog\n\n\n\nnews\n\n\n\n\n\n\n\nKim Schouten\n\n\nSep 25, 2025\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Next First Step: This Blog",
    "section": "",
    "text": "This is the first post on my new website / blog. Welcome!\nI am experimenting with using Quarto as a system to run this website. Years ago I also had a personal website which used wordpress but I wasnâ€™t too happy with it. It felt pretty complex and a bit bloated maybe? Because I love to code, I am taking a next step and start using Quarto to have once again a personal website.\nThat is also the theme that drives this attempt: the most important step is always the next one. Sometimes that means taking the first step, as with this website, sometimes it means getting back up again after a personal failure, and sometimes it means just powering through even if it gets tough or simply boring if that is what it takes.\nI just finished Rythm of War by Brandon Sanderson so the Knights Radiants and their ideals are still fresh in my mind. I think they apply here as well.\n\nLife before death. Strength before weakness. Journey before destination\n\nLife is both beautiful and painful. Still it is an amazing gift to be alive, to feel. Choosing life over death seems obvious, especially when things go well, but choosing to live and to live well can be hard when life comes at you hard in the moment. Focusing on your weakness can be a self-fulfilling prophesy, so choose to be strong and you likely will be. I see it as a form of courage, where in the face of your own struggles and weaknesses you are still brave enough to choose the right thing and thus your are strong. The last one is very reminiscent of the growth mindset for me which has been a personal goal for the last couple of years. Arriving (or not) at your destination is boolean, true or false, while the journey is a monotonically increasing number. Even worse, looking at destination you have basically failed up until the last step and you arrive at your destination. In contrast, focusing on the journey allows you to see every step as part of that lifelong journey. And even steps that, in hindsight, were maybe in the wrong direction have actually helped you learn and grow as a person so that now you do know which way to go. Just keep walking, every step counts.\nThat is why starting this blog for me is a next step. Publishing my thoughts and experiments will probably give me some anxiety. What if people thinkâ€¦ I am not capable enough, or not knowledgeable enough, or a bad communicator, orâ€¦ But: strength before weakness and journey before destination. So yes, some things you will read here will be obvious (or wrong!) to you because your journey has already led you beyond that point. It may still be useful for others though and it is useful for me. Feel free to add your wisdom and knowledge in the comments so others can benefit from them.\nThat is maybe the most important thing of a journey: youâ€™re not traveling alone!"
  }
]